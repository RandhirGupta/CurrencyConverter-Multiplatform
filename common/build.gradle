apply plugin: 'kotlin-multiplatform'
apply plugin: 'kotlinx-serialization'
apply plugin: 'com.squareup.sqldelight'

group = 'com.adrena.reaktive.core'
version = 1.0


kotlin {

    targets {
        fromPreset(presets.jvm, 'android')

//        final def iOSTarget = System.getenv('SDK_NAME')?.startsWith("iphoneos") ? presets.iosArm64 : presets.iosX64
//
//        fromPreset(iOSTarget, 'iOS') {
//            binaries {
//                framework('common') {
//                    freeCompilerArgs.add("-Xobjc-generics")
//                }
//            }
//        }
    }

    sourceSets {

        commonMain {

            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-stdlib-common"

                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-common:0.14.0"

                // Cache
                implementation "com.squareup.sqldelight:runtime:1.2.0"

                // Coroutines
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-common:1.3.2"

                // HTTP
                implementation "io.ktor:ktor-client-core:1.2.5"
                implementation "io.ktor:ktor-client-json:1.2.5"
                implementation "io.ktor:ktor-client-logging:1.2.5"
                implementation "io.ktor:ktor-client-serialization:1.2.5"

                // Reactive
                implementation "com.badoo.reaktive:reaktive:1.0.0"

                //caching
                implementation "com.squareup.sqldelight:runtime:1.2.0"
            }
        }

        androidMain {

            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-stdlib"

                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.14.0"

                // Coroutines
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.3"

                // HTTP
                implementation "io.ktor:ktor-client-android:1.2.5"
                implementation "io.ktor:ktor-client-core-jvm:1.2.5"
                implementation "io.ktor:ktor-client-json-jvm:1.2.5"
                implementation "io.ktor:ktor-client-logging-jvm:1.2.5"
                implementation "io.ktor:ktor-client-serialization-jvm:1.2.5"
            }
        }

        iOSMain {
            dependencies {
                implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-native:0.14.0"

                // Caching
                implementation "com.squareup.sqldelight:ios-driver:1.2.0"

                // HTTP
                implementation "io.ktor:ktor-client-ios:1.2.5"
                implementation "io.ktor:ktor-client-core-native:1.2.5"
                implementation "io.ktor:ktor-client-json-native:1.2.5"
                implementation "io.ktor:ktor-client-logging-native:1.2.5"
                implementation "io.ktor:ktor-client-serialization-native:1.2.5"
            }
        }

        all {
            languageSettings {
                progressiveMode = true
                useExperimentalAnnotation('kotlin.Experimental')
            }
        }
    }
}

sqldelight {
    CurrencyDatabase {
        packageName = "com.cyborg.common.sql"
        sourceFolders = ["sqldelight"]
        schemaOutputDirectory = file("src/commonMain/sqldelight/databases")
    }
}

configurations {
    compileClasspath
}

// Xcode-specific
//task packForXCode(type: Sync) {
//    final File frameworkDir = new File(buildDir, "xcode-frameworks")
//    final String mode = project.findProperty("XCODE_CONFIGURATION")?.toUpperCase() ?: 'DEBUG'
//    final def framework = kotlin.targets.iOS.binaries.getFramework("common", mode)
//
//    inputs.property "mode", mode
//    dependsOn framework.linkTask
//
//    from { framework.outputFile.parentFile }
//    into frameworkDir
//
//    doLast {
//        new File(frameworkDir, 'gradlew').with {
//            text = "#!/bin/bash\nexport 'JAVA_HOME=${System.getProperty("java.home")}'\ncd '${rootProject.rootDir}'\n./gradlew \$@\n"
//            setExecutable(true)
//        }
//    }
//}
//tasks.build.dependsOn packForXCode
//